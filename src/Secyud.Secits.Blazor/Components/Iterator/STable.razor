@namespace Secyud.Secits.Blazor
@inherits SIteratorBase<TItem>
@using Secyud.Secits.Blazor.Settings
@typeparam TItem

@{
    base.BuildRenderTree(__builder);
}

@code
{
    protected override RenderFragment GenerateHeader() => __builder =>
    {
        @base.GenerateHeader()
        @if (!DisableHeader)
        {
            <table class="table-header">
                <thead>
                <tr>
                    @for (var i = 0; i < TableColumns.Count; i++)
                    {
                        var column = TableColumns[i];
                        <th style="--cw: @(column.GetColumnWidth())px;">
                            @column.GenerateHeader()
                            @foreach (var header in TableHeaders)
                            {
                                @header.GenerateHeader(i)
                            }
                        </th>
                    }
                </tr>
                </thead>
            </table>
        }
    };

    protected override RenderFragment GenerateBody() => __builder =>
    {
        <div class="table-body">
            <table>
                <tbody>
                <tr>
                    @foreach (var column in TableColumns)
                    {
                        <td style="--cw: @column.GetColumnWidth()px;"/>
                    }
                </tr>
                @base.GenerateBody()
                </tbody>
            </table>
        </div>
    };

    protected override RenderFragment GenerateFooter() => __builder =>
    {
        @if (!DisableFooter)
        {
            <table class="table-footer">
                <tfoot>
                <tr>
                    @for (var i = 0; i < TableColumns.Count; i++)
                    {
                        var column = TableColumns[i];
                        <td style="--cw: @(column.GetColumnWidth())px;">
                            @column.GenerateFooter()
                            @foreach (var footer in TableFooters)
                            {
                                @footer.GenerateFooter(i)
                            }
                        </td>
                    }
                </tr>
                </tfoot>
            </table>
        }

        @base.GenerateFooter()
    };


    protected override RenderFragment GenerateRowWithRenderer(IRowRenderer<TItem> renderer, TItem item) =>
        @<tr class="@renderer.GetRowClass(item)"
             style="@renderer.GetRowStyle(item)"
             @onclick="e=> renderer.OnRowClick(e,item)">
            @GenerateCol(item)
        </tr>;

    protected override RenderFragment GenerateRowWithoutRenderer(TItem item) =>
        @<tr>@GenerateCol(item)</tr>;

    protected override RenderFragment GenerateCol(TItem item) => __builder =>
    {
        @foreach (var column in TableColumns)
        {
            <td>
                @column.GenerateColumn(item)
            </td>
        }
    };
}
