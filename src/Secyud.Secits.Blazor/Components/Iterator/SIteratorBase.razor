@namespace Secyud.Secits.Blazor
@inherits SContentBase
@using Secyud.Secits.Blazor.Settings
@typeparam TItem

@{
    base.BuildRenderTree(__builder);
}

@code
{

    protected override RenderFragment GenerateBody() => __builder =>
    {
        @ItemsRenderer.Get()?.GenerateItems(GenerateRow())
    };

    protected virtual RenderFragment<TItem> GenerateRow()
    {
        return RowRenderer.Get() is { } rowRenderer
            ? GenerateRowWithRenderer(rowRenderer)
            : GenerateRowWithoutRenderer();
    }

    protected virtual RenderFragment<TItem> GenerateRowWithRenderer(IRowRenderer<TItem> renderer) => item =>
        @<div class="@renderer.GetRowClass(item)"
              style="@renderer.GetRowStyle(item)"
              @onclick="e=> renderer.OnRowClick(e,item)">
            @GenerateCol()(item)
        </div>;

    protected virtual RenderFragment<TItem> GenerateRowWithoutRenderer() => item =>
        @<div>
            @GenerateCol()(item)
        </div>;

    protected abstract RenderFragment<TItem> GenerateCol();
}
