@namespace Secyud.Secits.Blazor.Element
@using Secyud.Secits.Blazor.Icons
@inherits SElementBase

<div class="@GetClass()" style="@GetStyle()">

    @if (MaxPageCount <= NeighbourCount * 2 + 1)
    {
        @GeneratePageButtons(0, MaxPageCount)
    }
    else
    {
        <SButton Click="TurnToFirstPageAsync" Disabled="@(PageIndex <= 0)" Class="outline">
            <AddTemplate>
                <SIcon IconName="@IconProvider.GetIcon(IconName.LeftAngles)"/>
            </AddTemplate>
        </SButton>
        <SButton Click="TurnToPreviewPageAsync" Disabled="@(PageIndex <= 0)" Class="outline">
            <AddTemplate>
                <SIcon IconName="@IconProvider.GetIcon(IconName.LeftAngle)"/>
            </AddTemplate>
        </SButton>

        var min = Math.Max(0, PageIndex - NeighbourCount);
        var max = Math.Min(MaxPageCount, min + 2 * NeighbourCount + 1);
        min = Math.Max(0, max - 2 * NeighbourCount - 1);
        @GeneratePageButtons(min, max)

        <SButton Click="TurnToNextPageAsync" Disabled="@(PageIndex >= MaxPageCount - 1)" Class="outline">
            <AddTemplate>
                <SIcon IconName="@IconProvider.GetIcon(IconName.RightAngle)"/>
            </AddTemplate>
        </SButton>
        <SButton Click="TurnToLastPageAsync" Disabled="@(PageIndex >= MaxPageCount - 1)" Class="outline">
            <AddTemplate>
                <SIcon IconName="@IconProvider.GetIcon(IconName.RightAngles)"/>
            </AddTemplate>
        </SButton>
    }

</div>

@code{


    protected RenderFragment GeneratePageButton(int pageIndex)
    {
        return __builder =>
        {
            if (pageIndex == PageIndex)
            {
                <SButton Class="outline disabled">
                    <AddTemplate>
                        @(pageIndex + 1)
                    </AddTemplate>
                </SButton>
            }
            else
            {
                <SButton Click="ChangeToCurrentPageAsync" Class="outline">
                    <AddTemplate>
                        @(pageIndex + 1)
                    </AddTemplate>
                </SButton>
            }
        };

        async Task ChangeToCurrentPageAsync()
        {
            await ChangePageIndexAsync(pageIndex);
        }
    }

}
