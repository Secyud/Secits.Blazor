@namespace Secyud.Secits.Blazor.Element
@inherits SElementBase
<div class="integer-slider @Class" style="--bias: @NumberCount;@Style" @onwheel="OnWheelAsync">
    @GenerateNumberBox()
</div>

@code
{
    private RenderFragment GenerateOffset(int offset, int value) =>
        @<span class="element" style="--offset: @offset;"
               @onclick="() => OnValueChangedAsync(value)">
            @(string.IsNullOrEmpty(Format) ? value : value.ToString(Format))
        </span>;

    private RenderFragment GenerateNumberBox() => __builder =>
    {
        var currentValue = Value;
        var cacheElement = NumberCount * 2;
        for (var offset = -cacheElement; offset <= cacheElement; offset++)
        {
            var value = currentValue + offset;

            if (Cycle)
                value = GetCycleValue(value);
            else if ((offset < 0 && currentValue < Min - offset) ||
                     (offset > 0 && currentValue > Max - offset))
                continue;
            __builder.AddContent(value, GenerateOffset(offset, value));
        }
    };
}